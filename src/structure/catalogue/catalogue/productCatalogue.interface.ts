import { Types, Document } from 'mongoose';

export enum categoryType {
    Category = 'Category',
    SubCategory = 'SubCategory',
    SubCategory1 = 'SubCategory1',
}
export interface IProductCatalogue {
    _id: Types.ObjectId;

    /*
     * THIS THREE IS SHOWN TO SELLER
     * NAME IS BASICALLY HEADER, DESCRIPTION IS SUBHEADING
     * AND IMAGE SO THAT THEY CAN RELATE
     */
    name: string;
    description: string;
    image: string;

    /*
     * THIS THREE IS SHOWN TO CUSTOMER
     */
    customer_name: string;
    customer_description: string;
    customer_image: string;

    parent: Types.ObjectId;

    /*
     * ALL HIS CHILD IN THE TREE
     */
    child: Types.ObjectId[];

    /*
     * FROM TOP TO BOTTOM UP TO HIS POSITION
     *  PARENT1 -> PARENT2 -> PARENT3 -> HISPOSITION
     */
    path: Types.ObjectId[];

    active: boolean;

    /*
     * IT IS UNIQUE FOR EVERY CATEGORY GENERATED BY US
     * FORGOT: WHAT WAS NEED TO CREATE THIS
     * SO BASICALLY TYPE WILL BE IN FORMAT STRING_STRING LIKE THIS
     * FRONTEND WILL BREAK THIS WITH _ AND WILL SHOW THIS ON UI
     */
    type: string;

    /*
     * TOTAL FILTER ADDED FOR EACH CATEGORY
     */
    totalFilterAdded: number;
    filters: [
        {
            name: 'Size';
            description: 'This filter contain size related details';
            value: ['28', '29', '30'];
            unit: 'cm';
            type: 'multiselect';
        },
        {
            name: 'Brands';
            value: ['Adidas', 'Nike'];
            type: 'SearchDropDown';
        },
        {
            name: 'Categories';
            value: ['Damaged', 'All'];
            type: 'Multiselectdropdown';
        },
        {
            name: 'Colors';
            value: [{ name: 'green'; colorCode: '#234342' }, { name: 'red'; colorCode: 'something' }];
            type: 'Multiselecttags';
        },
        {},
    ];
}

export interface IProductCatalogueModel extends IProductCatalogue, Document {}
